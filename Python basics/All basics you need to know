//printing name (first program)
print ('Prerak Panwar')                   #output: Prerak Panwar
name = input('what is your name?')        #output: what is your name?  (input is used to take value from user) 
print('hey my name is ' + name )          #output: hey my name is xyz  (if user typed name as xyz) 


//int and float(data types)
print(type(4+3))        #output: int
print (type(4-3))       #output: int
print (type (4*3) )     #output: int
print (type (4/5) )     #output: float
print (2 ** 3)          #output: 8      (2 raise to the power 3)
print (2 ** 2)          #output: 4 
print (2 // 3)          #output: 0
print (5 // 4)          #output: 1
print (12 % 13)         #output: 12     (gives remainder)
  

//math functions:
print (round (3.5))      #output: 4
print (round (3.4))      #output: 3
print(abs(-20))          #output: 20    (no negative value)


//Optional data types:
print (bin(5))           #output: 0b101  (change into binary representation)
print (int(0b101))       #output: 5      
print (int('0b101',2))   #output: 5

complex()          (This is equivalent to (real + imag*1j) where imag defaults to 0.)
print(complex(3))           #out: (3+0j) 
print(complex(3.0))         #out: (3+0j)
print(complex(3.2))         #out: (3.2+0j)
print(complex(-3.2))        #out: (-3.2+0j)
print(complex(-3))          #out: (-3+0j)
print(type(complex(3.2)))   #out: <class 'complex'>


//to assign diff. values to diff. variables
a,b,c= 1,2,3
print(a)   #1
print(b)   #2
print(c)   #3


//Augmented assignment operator
a = 5
a = a + 5
print (a)       out: 10
//OR
a = 5
a += 5
print (a)       out: 10


//STRING ' ' OR " " 
print (type ('xyz'))  #OUT: <class 'str'>
print (type ("xyz"))  #OUT: <class 'str'>

#To print long string on different line
long_string = '''
hello my
name is
Prerak Panwar
'''
print (long_string)

#String concatenation (to add strings together)
print ('Prerak' + ' ' + 'Panwar')     #OUT:Prerak Panwar

#type conversion (changing int to str, float etc and vice versa)
print (type(int(str(100))))       #OUT: <class 'int'>
#OR
a = str(100)
b = int(a)
c = type(b)
print(c)                         #OUT: <class 'int'>   


//Escape sequence (\) || (\t) || (\n)
#for using apostofy s
weather = '\t it\'s "kind of" raining outside \n I don\'t want to go to school'
print(weather)

#for using double quotes
weather = "\t it's \"kind of\" raining outside \n I don't want to go to school"
print(weather)

#for using both apostofy s & double quotes + using \t to tab out and \n for new line
weather = "\t it\'s \"kind of\" raining outside \n I don\'t want to go to school"
print(weather)
#OUT:     it's "kind of" raining outside
      I don't want to go to school


//FORMATTED STRINGS
name = 'Prerak'
age = 24
#normal method
print ('Hello ' + name + '. You are ' + str(age) + ' years old.')

#using formatted string (f) in python 3
print (f'Hello {name}. You are {age} years old.')              #OUT: Hello Prerak. You are 24 years old.
 
#using .format() in python 2
print ('Hello {}. You are {} years old.'.format(name,age))     #OUT: Hello Prerak. You are 24 years old.
                        #OR
print ('Hello {0}. You are {1} years old.'.format(name,age))   #OUT: Hello Prerak. You are 24 years old.
 
print ('Hello {1}. You are {0} years old.'.format(name,age))   #OUT: Hello 24. You are Prerak years old.

@@EXERCISE
# 1 What would be the output of the below 4 print statements?

print("Hello {}, your balance is {}.".format("Prerak", 245))
print("Hello {0}, your balance is {1}.".format("Prerak", 245))
print("Hello {name}, your balance is {amount}.".format(name="Prerak", amount=245))
print("Hello {0}, your balance is {amount}.".format("Prerak", amount=245))

Answer for all will be the same i.e : Hello Prerak, your balance is 245

# 2 How would you write this using f-string?

Answer :
name = 'Prerak'
amount = 245
print (f"Hello {name}, your balance is {amount}.")


//STRING INDEXES
# [START:STOP:STEPOVER]

abc= '1234567'

print(abc[0])                 #OUT: 1
print(abc[-1])                #OUT: 7
print(abc[0:4])               #OUT: 1234
print(abc[0:7:1])             #OUT: 1234567
print(abc[0:7:2])             #OUT: 1357
print(abc[1:])                #OUT: 234567
print(abc[:5])                #OUT: 12345

print(abc[::-1])              #OUT: 7654321 (REVERSE STRING)

@@EXERCISE
python = 'I am PYHTON'

print(python[1:4])        #OUT: am 
print(python[1:])         #OUT: am PYHTON
print(python[:])          #OUT:I am PYHTON
print(python[1:100])      #OUT: am PYHTON
print(python[-1])         #OUT:N
print(python[-4])         #OUT:H
print(python[:-3])        #OUT:I am PYH
print(python[-3:])        #OUT:TON
print(python[::-1])       #OUT:NOTHYP am I


//Built-in functions + Methods 
(REFER NOTES AND 'LINKS' WORD FILE)


//Booleans (either True/False)
print(bool(0))        #OUT: False
print(bool(1))        #OUT: True


//Exercise : Type Conversion
#program to print your age

birth_year = input ('what\'s your year of birth \n')
age = 2022 - int(birth_year)
print(f'your age is: {age}')


//Exercise : Password checker

username= input ('enter your username  ')  #let username as Prerak
password= input ('enter your password  ')  #let password as Panwar

password_length= len(password)
hidden_password = '*' * password_length
print (f'the username is: {username}. The password is : {hidden_password}, which is {password_length} length long.')

output: the username is: Prerak. The password is : ******, which is 6 length long.


//#LIST SLICING EXERCISE

#What is the output of this code?
#Before you clikc RUN, guess the output of each print statement!

new_list = ['a', 'b', 'c']
print(new_list[1])              OUT: b
print(new_list[-2])             OUT: b
print(new_list[1:3])            OUT: ['b', 'c']
new_list[0] = 'z'
print(new_list)                 OUT: ['z', 'b', 'c']

my_list = [1,2,3]
bonus = my_list + [5]
my_list[0] = 'z'
print(my_list)                  OUT: ['z', '2', '3']
print(bonus)                    OUT: ['1', '2', '3', '5']


//MATRIX EXERCISE:

# using this list: 
basket = ["Banana", ["Apples", ["Oranges"], "Blueberries"]];
# access "Oranges" and print it:

# Solution:
# basket[1][1][0]


//LIST METHODS EXERCISE:

# using this list, 
basket = ["Banana", "Apples", "Oranges", "Blueberries"];

# 1. Remove the Banana from the list

# 2. Remove "Blueberries" from the list.

# 3. Put "Kiwi" at the end of the list.

# 4. Add "Apples" at the beginning of the list

# 5. Count how many apples in the basket

# 6. empty the basket

print(basket)

#Solution:
#1 - basket.remove('Banana')
#2 - basket.pop()
#3 - basket.append('Kiwi')
#4 - basket.insert(0, 'Apples')
#5 - basket.count('Apples')
#6 - basket.clear()


//LIST EXERCISE

#fix this code so that it prints a sorted list of all of our friends (alphabetical). Scroll to see answer
friends = ['Simon', 'Patty', 'Joy', 'Carrie', 'Amira', 'Chu']

new_friend = ['Stanley']

print(friends.sort() + new_friend)

ANSWER:
# Solution: (keep in mind there are multiple ways to do this, so your answer may vary. As long as it works that's all that matters!)
# friends.extend(new_friend)
# print(sorted(friends))

OR

# new_friend = friends.append('Stanley')
# friends.sort()
#print(friends)


//DICTIONARY EXERCISE

#Scroll down to see the answers!
#1 Create a user profile for your new game. This user profile will be stored in a dictionary with keys: 'age', 'username', 'weapons', 'is_active' and 'clan'

#2 iterate and print all the keys in the above user.

#3 Add a new weapon to your user

#4 Add a new key to include 'is_banned'. Set it to false

#5 Ban the user by setting the previous key to True

#6 create a new user2 my copying the previous user and update the age value and username value.

#Solutions:
#1 Create a user profile for your new game. This user profile will be stored in a dictionary with keys: 'age', 'username', 'weapons', 'is_active' and 'clan'
user = {
  'age' : 25,
  'username' : 'prerak',
  'weapons' : ['ak47','glock','p2000'],
  'is_active' : True,
  'clan' : 'Garhwal'
}

#2 iterate and print all the keys in the above user.
print(user.keys())

#3 Add a new weapon to your user
user['weapons'].append('usp')
print(user)

OR

user.update({'weapons': ['ak47','glock','p2000','usp']})
print(user)

#4 Add a new key to include 'is_banned'. Set it to false
user.update({'is_banned': False}) 
print(user)

#5 Ban the user by setting the previous key to True
user['is_banned'] = True
print(user)

OR

user.update({'is_banned' : 'True'})
print(user)

#6 create a new user2 my copying the previous user and update the age value and username value. 
user2 = user.copy()
user2.update({'age': 20, 'username': 'panwar'})
print(user2)


//




